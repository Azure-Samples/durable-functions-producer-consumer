{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "DataExplorerClusterName": {
      "defaultValue": "[toLower(concat('dex', uniqueString(subscription().id, resourceGroup().id)))]",
      "type": "string"
    },
    "ConsumerFunctionAppName": {
      "defaultValue": "[concat('consumer', uniqueString(subscription().id, resourceGroup().id))]",
      "type": "string"
    },
    "ProducerFunctionAppName": {
      "defaultValue": "[concat('producer', uniqueString(subscription().id, resourceGroup().id))]",
      "type": "string"
    },
    "FunctionPlanName": {
      "defaultValue": "[concat(uniqueString(subscription().id, resourceGroup().id), 'Plan')]",
      "type": "string"
    },
    "StorageAccountName": {
      "defaultValue": "[toLower(concat('stor', uniqueString(subscription().id, resourceGroup().id)))]",
      "type": "string"
    },
    "ServiceBusNamespaceName": {
      "defaultValue": "[concat('sb', uniqueString(subscription().id, resourceGroup().id))]",
      "type": "string"
    },
    "EventHubNamespaceName": {
      "defaultValue": "[concat('eh', uniqueString(subscription().id, resourceGroup().id))]",
      "type": "string"
    }
  },
  "variables": {
    "sampleName": "azure-durable-functions-producer-consumer",
    "producerFunctionId": "[resourceId('Microsoft.Web/Sites', parameters('ProducerFunctionAppName'))]",
    "ehAuthRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('EventHubNamespaceName'), 'RootManageSharedAccessKey')]",
    "sbAuthRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('ServiceBusNamespaceName'), 'RootManageSharedAccessKey')]"
  },
  "resources": [
    {
      "name": "[parameters('EventHubNamespaceName')]",
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2017-04-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "sample": "[variables('sampleName')]"
      },
      "sku": {
        "name": "Basic",
        "tier": "Basic",
        "capacity": 1
      },
      "properties": {
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": false
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('EventHubNamespaceName'), '/collector')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('EventHubNamespaceName'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 32,
        "status": "Active"
      },
      "tags": {
        "sample": "[variables('sampleName')]"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('EventHubNamespaceName'), '/sample')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('EventHubNamespaceName'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 32,
        "status": "Active"
      },
      "tags": {
        "sample": "[variables('sampleName')]"
      }
    },
    {
      "type": "Microsoft.Kusto/clusters",
      "apiVersion": "2019-01-21",
      "name": "[parameters('DataExplorerClusterName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Dev(No SLA)_Standard_D11_v2",
        "tier": "Basic",
        "capacity": 1
      },
      "properties": {},
      "tags": {
        "sample": "[variables('sampleName')]"
      }
    },
    {
      "type": "Microsoft.Kusto/clusters/databases",
      "apiVersion": "2019-01-21",
      "name": "[concat(parameters('DataExplorerClusterName'), '/sampledata')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Kusto/Clusters', parameters('DataExplorerClusterName'))]"
      ],
      "properties": {
        "softDeletePeriod": "P3650D",
        "hotCachePeriod": "P31D"
      },
      "tags": {
        "sample": "[variables('sampleName')]"
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[parameters('ServiceBusNamespaceName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "tags": {
        "sample": "[variables('sampleName')]"
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('ServiceBusNamespaceName'), '/sample')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('ServiceBusNamespaceName'))]"
      ],
      "properties": {
        "lockDuration": "PT30S",
        "maxSizeInMegabytes": 1024,
        "requiresDuplicateDetection": false,
        "requiresSession": true,
        "defaultMessageTimeToLive": "P14D",
        "deadLetteringOnMessageExpiration": false,
        "enableBatchedOperations": true,
        "duplicateDetectionHistoryTimeWindow": "PT10M",
        "maxDeliveryCount": 10,
        "status": "Active",
        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
        "enablePartitioning": false,
        "enableExpress": false
      },
      "tags": {
        "sample": "[variables('sampleName')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[parameters('StorageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      },
      "tags": {
        "sample": "[variables('sampleName')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-04-01",
      "name": "[concat(parameters('StorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {
        "deleteRetentionPolicy": {
          "enabled": false
        }
      },
      "tags": {
        "sample": "[variables('sampleName')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[parameters('FunctionPlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "name": "[parameters('FunctionPlanName')]",
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      },
      "tags": {
        "sample": "[variables('sampleName')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[parameters('ConsumerFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('FunctionPlanName'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('ServiceBusNamespaceName'))]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('EventHubNamespaceName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('FunctionPlanName'))]",
        "reserved": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(parameters('StorageAccountName'),'2019-04-01').keys[0].value)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(parameters('StorageAccountName'),'2019-04-01').keys[0].value)]"
            },
            {
              "name": "CollectorEventHubConnection",
              "value": "[listkeys(variables('ehAuthRuleResourceId'), '2017-04-01').primaryConnectionString]"
            },
            {
              "name": "CollectorEventHubName",
              "value": "collector"
            },
            {
              "name": "EventHubConnection",
              "value": "[listkeys(variables('ehAuthRuleResourceId'), '2017-04-01').primaryConnectionString]"
            },
            {
              "name": "EventHubName",
              "value": "sample"
            },
            {
              "name": "FUNCTIONS_EXTENSION_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ServiceBusConnection",
              "value": "[listkeys(variables('sbAuthRuleResourceId'), '2017-04-01').primaryConnectionString]"
            },
            {
              "name": "ServiceBusQueueName",
              "value": "sample"
            },
            {
              "name": "StorageQueueConnection",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(parameters('StorageAccountName'),'2019-04-01').keys[0].value)]"
            },
            {
              "name": "StorageQueueName",
              "value": "sample"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(parameters('StorageAccountName'),'2019-04-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('ConsumerFunctionAppName'))]"
            },
            {
              "name": "PROJECT",
              "value": "Consumer/"
            }
          ]
        }
      },
      "tags": {
        "sample": "[variables('sampleName')]"
      },
      "resources": [
        {
          "apiVersion": "2018-02-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('ConsumerFunctionAppName'))]"
          ],
          "properties": {
            "repoUrl": "https://github.com/Azure-Samples/durable-functions-producer-consumer",
            "branch": "master",
            "isManualIntegration": true,
            "isMercurial": false
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[parameters('ProducerFunctionAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('FunctionPlanName'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('ServiceBusNamespaceName'))]",
        "[resourceId('Microsoft.EventHub/namespaces', parameters('EventHubNamespaceName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('FunctionPlanName'))]",
        "reserved": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(parameters('StorageAccountName'),'2019-04-01').keys[0].value)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(parameters('StorageAccountName'),'2019-04-01').keys[0].value)]"
            },
            {
              "name": "DFTaskHubName",
              "value": "producerTaskHub"
            },
            {
              "name": "EventHubConnection",
              "value": "[listkeys(variables('ehAuthRuleResourceId'), '2017-04-01').primaryConnectionString]"
            },
            {
              "name": "EventHubName",
              "value": "sample"
            },
            {
              "name": "FUNCTIONS_EXTENSION_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "ServiceBusConnection",
              "value": "[listkeys(variables('sbAuthRuleResourceId'), '2017-04-01').primaryConnectionString]"
            },
            {
              "name": "ServiceBusQueueName",
              "value": "sample"
            },
            {
              "name": "StorageQueueConnection",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(parameters('StorageAccountName'),'2019-04-01').keys[0].value)]"
            },
            {
              "name": "StorageQueueName",
              "value": "sample"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(parameters('StorageAccountName'),'2019-04-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('ProducerFunctionAppName'))]"
            },
            {
              "name": "PROJECT",
              "value": "Producer/"
            }
          ]
        }
      },
      "tags": {
        "sample": "[variables('sampleName')]"
      },
      "resources": [
        {
          "apiVersion": "2018-02-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('ProducerFunctionAppName'))]"
          ],
          "properties": {
            "repoUrl": "https://github.com/Azure-Samples/durable-functions-producer-consumer",
            "branch": "master",
            "isManualIntegration": true,
            "isMercurial": false
          }
        }
      ]
    }
  ],
  "outputs": {
    "dexbaseUrl": {
      "type": "string",
      "value": "[concat('https://dataexplorer.azure.com/clusters/', parameters('DataExplorerClusterName'), '.', resourceGroup().location, '/databases/sampledata')]"
    },
    "dexResourceHost": {
      "type": "string",
      "value": "[concat(parameters('DataExplorerClusterName'), '.', resourceGroup().location, '.kusto.windows.net')]"
    },
    "eventHubProducer": {
      "type": "string",
      "value": "[concat('https://', parameters('ProducerFunctionAppName'), '.azurewebsites.net/api/PostToEventHub?code=', listkeys(concat(variables('producerFunctionId'), '/host/default/'),'2016-08-01').functionKeys.default)]"
    },
    "serviceBusProducer": {
      "type": "string",
      "value": "[concat('https://', parameters('ProducerFunctionAppName'), '.azurewebsites.net/api/PostToServiceBusQueue?code=', listkeys(concat(variables('producerFunctionId'), '/host/default/'),'2016-08-01').functionKeys.default)]"
    },
    "storageQueueProducer": {
      "type": "string",
      "value": "[concat('https://', parameters('ProducerFunctionAppName'), '.azurewebsites.net/api/PostToStorageQueue?code=', listkeys(concat(variables('producerFunctionId'), '/host/default/'),'2016-08-01').functionKeys.default)]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('StorageAccountName')]"
    }
  }
}